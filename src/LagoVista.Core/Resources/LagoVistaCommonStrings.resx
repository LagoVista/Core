<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Address_Address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="Address_Address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="Address_AddressType" xml:space="preserve">
    <value>Address Type</value>
  </data>
  <data name="Address_AddressType_Business" xml:space="preserve">
    <value>Busines</value>
  </data>
  <data name="Address_AddressType_Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Address_AddressType_Residential" xml:space="preserve">
    <value>Residential</value>
  </data>
  <data name="Address_AddressType_Select" xml:space="preserve">
    <value>-select address type-</value>
  </data>
  <data name="Address_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Address_Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Address_Description" xml:space="preserve">
    <value>Physical address to be attached to other records</value>
  </data>
  <data name="Address_GeoLocation" xml:space="preserve">
    <value>Geo Location</value>
  </data>
  <data name="Address_Help" xml:space="preserve">
    <value>Physical address to be attached to other records</value>
  </data>
  <data name="Address_PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Address_StateOrProvince" xml:space="preserve">
    <value>State or Province</value>
  </data>
  <data name="Address_Title" xml:space="preserve">
    <value>Address (location)</value>
  </data>
  <data name="Address_UnitNumber" xml:space="preserve">
    <value>Unit Number</value>
  </data>
  <data name="Address_UnitNumber_Help" xml:space="preserve">
    <value>Unit number can be appartment number, suite or other </value>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Common_Category_Select" xml:space="preserve">
    <value>-select category-</value>
  </data>
  <data name="Common_CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="Common_CreationDate" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="Common_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Common_IsPublic" xml:space="preserve">
    <value>Is Public</value>
  </data>
  <data name="Common_Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Common_Key_Help" xml:space="preserve">
    <value>The key is used to identify this item in scripts and must be unique with respect to it's parent. Once a key has been assigned, it can not be changed.</value>
  </data>
  <data name="Common_Key_Validation" xml:space="preserve">
    <value>The key must use only letters and numbers, and must be lowercase and must be between 3 and 32 characters.</value>
  </data>
  <data name="Common_LastUpdated" xml:space="preserve">
    <value>Last Updated</value>
  </data>
  <data name="Common_LastUpdatedBy" xml:space="preserve">
    <value>Last Updated By</value>
  </data>
  <data name="Common_Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="Common_Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Common_Month_Select" xml:space="preserve">
    <value>-select month-</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Common_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Common_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Common_PleaseWait" xml:space="preserve">
    <value>Please Wait</value>
  </data>
  <data name="Common_Select" xml:space="preserve">
    <value>-select-</value>
  </data>
  <data name="Common_Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Common_Year_Select" xml:space="preserve">
    <value>-select year-</value>
  </data>
  <data name="Common_Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Company_Description" xml:space="preserve">
    <value>Stores company information</value>
  </data>
  <data name="Company_Help" xml:space="preserve">
    <value>Stores company information</value>
  </data>
  <data name="Company_Industry" xml:space="preserve">
    <value>Industry</value>
  </data>
  <data name="Company_IndustryNiche" xml:space="preserve">
    <value>Industry Niche</value>
  </data>
  <data name="Company_Title" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Contact_Description" xml:space="preserve">
    <value>A contact is a person that is not a NuvIoT user (at least initially) where we need communicate with them.</value>
  </data>
  <data name="Contact_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Contact_FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Contact_Help" xml:space="preserve">
    <value>A contact is a person that is not a NuvIoT user (at least initially) where we need communicate with them.</value>
  </data>
  <data name="Contact_LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Contact_LinkedInPage" xml:space="preserve">
    <value>Linked In Page</value>
  </data>
  <data name="Contact_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Contact_Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="Contact_Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Customer_Address1" xml:space="preserve">
    <value>Address 1</value>
  </data>
  <data name="Customer_Address2" xml:space="preserve">
    <value>Address 2</value>
  </data>
  <data name="Customer_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="Customer_Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Customer_State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Customer_WebSite" xml:space="preserve">
    <value>Web Site</value>
  </data>
  <data name="Customer_ZipCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Discussion" xml:space="preserve">
    <value>Discussion</value>
  </data>
  <data name="Discussion_Help" xml:space="preserve">
    <value>Notes or Discussions that can be added to objects.</value>
  </data>
  <data name="Discussion_TimeStamp" xml:space="preserve">
    <value>Time Stamp</value>
  </data>
  <data name="Discussion_Title" xml:space="preserve">
    <value>Discussion</value>
  </data>
  <data name="ErrorMakingCall" xml:space="preserve">
    <value>Sorry, there was an error talking to the server, please try again later.</value>
  </data>
  <data name="ListResponse_Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="ListResponse_Deleted" xml:space="preserve">
    <value>Is Deleted</value>
  </data>
  <data name="Month_April" xml:space="preserve">
    <value>April</value>
  </data>
  <data name="Month_August" xml:space="preserve">
    <value>August</value>
  </data>
  <data name="Month_December" xml:space="preserve">
    <value>December</value>
  </data>
  <data name="Month_February" xml:space="preserve">
    <value>February</value>
  </data>
  <data name="Month_January" xml:space="preserve">
    <value>January</value>
  </data>
  <data name="Month_July" xml:space="preserve">
    <value>July</value>
  </data>
  <data name="Month_June" xml:space="preserve">
    <value>June</value>
  </data>
  <data name="Month_March" xml:space="preserve">
    <value>March</value>
  </data>
  <data name="Month_May" xml:space="preserve">
    <value>May</value>
  </data>
  <data name="Month_November" xml:space="preserve">
    <value>November</value>
  </data>
  <data name="Month_October" xml:space="preserve">
    <value>October</value>
  </data>
  <data name="Month_September" xml:space="preserve">
    <value>September</value>
  </data>
  <data name="NoConnection" xml:space="preserve">
    <value>Sorry, you do not appear to have an internet connection, please try again later.</value>
  </data>
  <data name="Schedule_Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Schedule_Biweekly" xml:space="preserve">
    <value>Bi-Weekly</value>
  </data>
  <data name="Schedule_Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="Schedule_DayOfWeek" xml:space="preserve">
    <value>Day of Week</value>
  </data>
  <data name="Schedule_Description" xml:space="preserve">
    <value>Schedule is a description of when an event should occur.</value>
  </data>
  <data name="Schedule_EndsOn" xml:space="preserve">
    <value>Ends On</value>
  </data>
  <data name="Schedule_FirstWeek" xml:space="preserve">
    <value>First Week</value>
  </data>
  <data name="Schedule_FourthWeek" xml:space="preserve">
    <value>Fourth Week</value>
  </data>
  <data name="Schedule_Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Schedule_Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="Schedule_Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="Schedule_Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Schedule_ScheduleType" xml:space="preserve">
    <value>Schedule Type</value>
  </data>
  <data name="Schedule_ScheduleType_Biweekly" xml:space="preserve">
    <value>Biweekly</value>
  </data>
  <data name="Schedule_ScheduleType_Daily" xml:space="preserve">
    <value>Daily</value>
  </data>
  <data name="Schedule_ScheduleType_FirstDayOfMonth" xml:space="preserve">
    <value>First day of month</value>
  </data>
  <data name="Schedule_ScheduleType_LastDayOfMonth" xml:space="preserve">
    <value>Last day of month</value>
  </data>
  <data name="Schedule_ScheduleType_Monthly" xml:space="preserve">
    <value>Monthly</value>
  </data>
  <data name="Schedule_ScheduleType_Select" xml:space="preserve">
    <value>-select schedule type-</value>
  </data>
  <data name="Schedule_ScheduleType_Weekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
  <data name="Schedule_SecondWeek" xml:space="preserve">
    <value>Second Week</value>
  </data>
  <data name="Schedule_SelectWeek" xml:space="preserve">
    <value>-select week-</value>
  </data>
  <data name="Schedule_StartsOn" xml:space="preserve">
    <value>Starts On</value>
  </data>
  <data name="Schedule_StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="Schedule_Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Schedule_ThirdWeek" xml:space="preserve">
    <value>Third Week</value>
  </data>
  <data name="Schedule_Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Schedule_Title" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="Schedule_Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Schedule_Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Schedule_Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="Schedule_Weekly" xml:space="preserve">
    <value>Weekly</value>
  </data>
</root>